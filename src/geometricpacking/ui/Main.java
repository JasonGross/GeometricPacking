/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package geometricpacking.ui;

/**
 *
 * @author Jason
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        clickActions = new javax.swing.ButtonGroup();
        jGridHolder = new javax.swing.JPanel();
        jGrid = new geometricpacking.ui.Grid();
        jLabel1 = new javax.swing.JLabel();
        jGridSize = new javax.swing.JSlider();
        jErase = new javax.swing.JRadioButton();
        jAddDisk = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jDiskRadius = new javax.swing.JSlider();
        jGo = new javax.swing.JButton();
        jReset = new javax.swing.JButton();
        jClear = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jDelay = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jGrid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jGrid.setToolTipText("Click to add a disk here.");
        jGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGridMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jGridLayout = new javax.swing.GroupLayout(jGrid);
        jGrid.setLayout(jGridLayout);
        jGridLayout.setHorizontalGroup(
            jGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jGridLayout.setVerticalGroup(
            jGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 218, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jGridHolderLayout = new javax.swing.GroupLayout(jGridHolder);
        jGridHolder.setLayout(jGridHolderLayout);
        jGridHolderLayout.setHorizontalGroup(
            jGridHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jGrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jGridHolderLayout.setVerticalGroup(
            jGridHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jGrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setLabelFor(jGridSize);
        jLabel1.setText("Grid Size:");
        jLabel1.setToolTipText("The spacking of grid lines");

        jGridSize.setMaximum(300);
        jGridSize.setMinimum(10);
        jGridSize.setToolTipText("The spacking of grid lines");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jGrid, org.jdesktop.beansbinding.ELProperty.create("${gridWidth}"), jGridSize, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        clickActions.add(jErase);
        jErase.setText("Erase Disks");
        jErase.setToolTipText("If this is selected, clicking removes a disk which contians the clicked point.");

        clickActions.add(jAddDisk);
        jAddDisk.setSelected(true);
        jAddDisk.setText("Add Disks");
        jAddDisk.setToolTipText("If this is selected, clicking adds disks.");
        jAddDisk.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jAddDiskStateChanged(evt);
            }
        });
        jAddDisk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddDiskActionPerformed(evt);
            }
        });

        jLabel2.setLabelFor(jDiskRadius);
        jLabel2.setText("Radius:");
        jLabel2.setToolTipText("The radus of all disks");

        jDiskRadius.setToolTipText("The radus of all disks");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jGrid, org.jdesktop.beansbinding.ELProperty.create("${diskRadius}"), jDiskRadius, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jGo.setText("Go!");
        jGo.setToolTipText("Run the algorithm.  First all disks are grayed out.  Then, one box at a time, the box of disks is darkened, and then the maximal set is darkened again while the rest of the disks are grayed.");
        jGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGoActionPerformed(evt);
            }
        });

        jReset.setText("Reset Grid");
        jReset.setToolTipText("Re-randomize the grid offset");
        jReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResetActionPerformed(evt);
            }
        });

        jClear.setText("Clear");
        jClear.setToolTipText("Remove all disks");
        jClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearActionPerformed(evt);
            }
        });

        jLabel3.setLabelFor(jDelay);
        jLabel3.setText("Delay (ms):");
        jLabel3.setToolTipText("Duration between successive steps of the algorithm.");

        jDelay.setMaximum(1000);
        jDelay.setToolTipText("Duration between successive steps of the algorithm.");
        jDelay.setValue(500);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jGrid, org.jdesktop.beansbinding.ELProperty.create("${delay}"), jDelay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jGridHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGridSize, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDiskRadius, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jAddDisk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jErase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jClear))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jGo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jGridHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDiskRadius, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jGo)
                        .addComponent(jReset)
                        .addComponent(jLabel3))
                    .addComponent(jDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGridSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jAddDisk)
                        .addComponent(jErase)
                        .addComponent(jClear)))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResetActionPerformed
        jGrid.resetOffset();
        jGrid.circles.resetState();
    }//GEN-LAST:event_jResetActionPerformed

    private void jGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGridMouseClicked
        if (jAddDisk.isSelected()) {
            jGrid.circles.addCircle(evt.getX(), evt.getY());
        } else if (jErase.isSelected()) {
            jGrid.circles.removeCircleContainingPoint(evt.getX(), evt.getY());
        }

    }//GEN-LAST:event_jGridMouseClicked

    private void jClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearActionPerformed
        jGrid.circles.clear();
    }//GEN-LAST:event_jClearActionPerformed

    private void jGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGoActionPerformed
        jGrid.runner.go();
    }//GEN-LAST:event_jGoActionPerformed

    private void jAddDiskStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jAddDiskStateChanged
        if (jAddDisk.isSelected()) {
            jGrid.setToolTipText("Click to add a disk here.");
        } else if (jErase.isSelected()) {
            jGrid.setToolTipText("Click to remove the disk whose center is closest to this point.");
        }
    }//GEN-LAST:event_jAddDiskStateChanged

    private void jAddDiskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddDiskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAddDiskActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup clickActions;
    private javax.swing.JRadioButton jAddDisk;
    private javax.swing.JButton jClear;
    private javax.swing.JSlider jDelay;
    private javax.swing.JSlider jDiskRadius;
    private javax.swing.JRadioButton jErase;
    private javax.swing.JButton jGo;
    private geometricpacking.ui.Grid jGrid;
    private javax.swing.JPanel jGridHolder;
    private javax.swing.JSlider jGridSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jReset;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
